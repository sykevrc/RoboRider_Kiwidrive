{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor FL = motor(PORT1, ratio6_1, false);\n\nmotor FR = motor(PORT3, ratio18_1, false);\n\nmotor B = motor(PORT2, ratio18_1, false);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n#include \"vex.h\"\n#include <string>\n#include <cmath>\n\nusing namespace vex;\n\n// --- Globals ---\nfloat FLSpeed = 0;\nfloat FRSpeed = 0;\nfloat BSpeed = 0;\nfloat x = 0;\nfloat y = 0;\nfloat r = 0;\n\n\n\n// Convert degrees to radians for trig functions\ndouble degToRad(double degrees) {\n  return degrees * M_PI / 180.0;\n}\n\n// \"when started\" logic\nint whenStarted1() {\n\n\nwhile (true) {\n  // Get joystick inputs\n  double xRaw = -Controller1.Axis4.position(); // Fix reversed strafe\n  double yRaw = Controller1.Axis3.position();  // Forward/back\n  double r = Controller1.Axis1.position();     // Rotation\n\n  // Rotate the joystick vector to redefine \"front\"\n  double angleDeg = 240; // Change to 120, 240, or -120 depending on front\n  double angleRad = angleDeg * M_PI / 180.0;\n\n  x = xRaw * cos(angleRad) - yRaw * sin(angleRad);\n  y = xRaw * sin(angleRad) + yRaw * cos(angleRad);\n\n  // Motor kinematics for Kiwi drive\n  double scale = 0.5; // optional scaling to stay within range\n\n  FLSpeed = scale * (x + r);\n  FRSpeed = scale * (-0.5 * x + sqrt(3)/2 * y + r);\n  BSpeed  = scale * (-0.5 * x - sqrt(3)/2 * y + r);\n\n  // Apply motor commands\n  FL.setVelocity(FLSpeed, percent);\n  FL.spin(fwd);\n  FR.setVelocity(FRSpeed, percent);\n  FR.spin(fwd);\n  B.setVelocity(BSpeed, percent);\n  B.spin(fwd);\n\n  wait(20, msec);\n}\n\n\n\n  return 0;\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  whenStarted1();\n}","textLanguage":"cpp","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"FL","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[3],"name":"FR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[2],"name":"B","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}